<resources>
    <string name="app_name">C Programming Quiz</string>
    <string-array name="C_programming">
        <item>Variables</item>
        <item>Constants</item>
        <item>Functions for Input</item>
        <item>Functions for output</item>
        <item>Header files</item>
        <item>Predifine</item>
        <item>Return</item>
        <item>Arithmetic Signs</item>
        <item>Strings</item>
        <item>Data Types</item>
    </string-array>

    <string name="helloworld">
        int main()\n
        {\n
        printf("Hello World");\n
        return 0;\n
        }\n
    </string>

    <string name="about"> Total C Programming is a learning app
            that helps ypu learn C completely\n
            \n\nDevelopers:
            \nMd. Nazam-As-Sakib Showad\nsakibshowad@gmail.com
            \n\n\n\nKya Ching Hla\nkyaching@gmail.com\n\n
     </string>

    <string name="test1question1">If a=3 and b=2 , than a%b= ?
     </string>
    <string name="test1question2">If a=3 and b=2 , than a + b = ?
     </string>
    <string name="variabletext"> A variable is just a named area of storage that can hold a single value (numeric or character). The C language demands that you declare the name of each variable that you are going to use and its type, or class, before you actually try to do anything with it.

The Programming language C has two main variable types\n\n

Local Variables\n

Global Variables\n\n

Local Variables\n
Local variables scope is confined within the block or function where it is defined. Local variables must always be defined at the top of a block.

When a local variable is defined - it is not initalised by the system, you must initalise it yourself.

When execution of the block starts the variable is available, and when the block ends the variable 'dies'.


     </string>


</resources>